laana dekhne_wala;
laana java.util.Stack;

kuch Number {
    raaz dashamalav value;
    raaz bhai ye hai index;

    khula Number(dashamalav value, bhai ye hai index) {
        ye.value = value;
    }

    khula dashamalav getValue() {
        vaapas karo value;
    }

    khula bhai ye hai getIndex() {
        vaapas karo index;
    }
}

kuch Operator {
    raaz String value;
    raaz bhai ye hai index;

    khula Operator(String value, bhai ye hai index) {
        ye.value = value;
        ye.index = index;
    }

    khula String getValue() {
        vaapas karo value;
    }

    khula bhai ye hai getIndex() {
        vaapas karo index;
    }

    khula dashamalav operation(dashamalav a, dashamalav b) {
        agar bhai (value.equals("+")) {
            vaapas karo a + b;
        } warna bhai agar bhai (value.equals("-")) {
            vaapas karo a - b;
        } warna bhai agar bhai (value.equals("*")) {
            vaapas karo a * b;
        } warna bhai agar bhai (value.equals("/")) {
            vaapas karo a / b;
        } warna bhai agar bhai (value.equals("%")) {
            vaapas karo a % b;
        } warna bhai {
            vaapas karo 0;
        }
    }
}

kuch ReversePolish {
    raaz String input;
    raaz Stack<Number> number_stack;

    khula ReversePolish(String input) {
        ye.input = input;
        number_stack = naya Stack<Number>();
    }

    raaz haan ya nahin isNumber(String s) {
        try {
            Integer.parseInt(s);
            vaapas karo sahi;
        } catch (NumberFormatException e) {
            vaapas karo galat;
        }
    }

    khula dashamalav evaluate() {
        number_stack = naya Stack<Number>();

        bhol bhai ("Steps in the evaluation: ");

        String[] input_array = input.split(" ");
        for (bhai ye hai i = 0; i < input_array.length; i++) {
            agar bhai (isNumber(input_array[i])) {
                number_stack.push(naya Number(Integer.parseInt(input_array[i]), i));
            } warna bhai {
                Number a = number_stack.pop();
                Number b = number_stack.pop();
                Operator op = naya Operator(input_array[i], i);
                // bolo out the steps in completion
                bhol bhai (b.getValue() + " " + op.getValue() + " " + a.getValue() + " = " + op.operation(b.getValue(), a.getValue()));
                number_stack.push(naya Number(op.operation(b.getValue(), a.getValue()), i));
            }
        }

        bhol bhai ();

        vaapas karo number_stack.pop().getValue();
    }

    khula nahin bolo() {
        bhol bhai ("The input is: " + input);
        bhol bhai ("The result is: " + evaluate());
    }

    khula shaanti dashamalav evaluate(String input) {
        ReversePolish thing = naya ReversePolish(input);
        vaapas karo thing.evaluate();
    }
}

khula kuch Main {
    // test the Reverse Polish Notation kuch
    khula shaanti nahin main(String[] args) {
        bhol bhai ("Testing the Reverse Polish Notation kuch");

        // Test cases
        bhol bhai ("Test case 1: ");
        bhol bhai ("Input: 5 2 + 8 5 - *");
        bhol bhai ("Expected output: " + ReversePolish.evaluate("5 2 + 8 5 - *"));

        // Enter your own input
        dekh bhai input = naya dekh bhai(System.in);
        bhol bhai ("Enter 'exit' to stop:");
        bhol bhai ("Press enter to continue:");

        jab tak (!input.nextLine().equals("exit")) {
            bhol bhai ("Enter a string: ");
            String user_input = input.nextLine();

            ReversePolish thing3 = naya ReversePolish(user_input);
            thing3.bolo();

            bhol bhai ("\n\nEnter 'exit' to stop:");
        }

        input.close();
    }
}